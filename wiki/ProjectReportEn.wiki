#summary English Report for the Project (for School)

= Abstract =

More and more, ISPs (Internet Service Provider) give the possibility to receive TV channels with the Internet connection. Generally, they give you a box to connect at he TV, nevertheless they often offe the way to watch channels on you PC by using a sofware like the famous VLC Media Player. VLC, which is a very good software, but not really, but not really user friendly, provide a free libray for developers who want to create another graphical user interface (GUI) which integrate the VLC player. By this fact, a lot of sofware are borned, more user friendly with an interface adapted for watching TV. For example, they allow you to record the channel, have a look at the TV guide, use the timeshifting or the PIP (Picture in Picture), easily change the channel… However, these software are by and large working only on the Windows operating system what is a really big problem for the Linux operating system's users. There is actually no software for them. So it was time to propose a new project, a software which allow you to watch the TV on Linux, which will be called FreetuxTV. Thanks to M. Tatibouët who supervise this project.

= 1 - Introduction =

== 1.1 - ADSL, TV & Player ==

ISP comparatif, Player compratif, WebTV

== 1.2 - Why FreetuxTV ? ==

Linux, Gnome, GTK

== 1.3 - FreetuxTV goals ==

+ simple que VLC, gestion chaines, enregistrement, programme TV, libre...

= 2 - Method =

== 2.1 - Technical choices ==

=== Google Code hosting ===

For this project, we decided to create FreetuxTV as a Google Code project. Google Code allow to host the code and documentation of open source project for no money. In fact, this is a source code repository and acts as a centralized location for software developers to control and manage open source software development.
The hosting service offers a collaborative development environment that includes:
 * Project workspaces with simple membership controls: you can easily add new members into the project. Each project members may use the project, but may not reconfigure it. They are generally developers who can change the code source of the software to ameliorate it. Project owners may make any change to the project.
 * Version control via Subversion: a version control system permits developers to easily synchronize their source code modifications.
 * Downloads: users can download file given by the members concerning the project, like installer, documentation... 
 * Issue tracking: the community of the project can report bugs and problems to help developers to make the stable software. The users may also request for features in the project.
 * Wiki pages: members can creates pages to provide documentations and informations about the project.
These services are always accesible by using internet. For our project is hosted at http://code.google.com/p/freetuxtv/. We’ve done this because we really hope that a lot of people will use FreetuxTV and we will continue the project after the university context.

=== C and GTK2+ ===

FreetuxTV is destined to work for Linux users, and particulary the one they use GNOME (GNU Network Object Model Environment). GNOME is one of the desktop environement on Linux. Its strength is probably to be the most simple, ergonomic and user-friendly desktop. It is used in Ubuntu, the most popular Linux distribution. GNOME and its applications are made with GTK2+. GTK2+ is a free library for developers to create GUI (Graphical User Interface). This is a collection of widgets, for drawing and display nice windows on the desktop. GTK2+ library is avaliable for a lot of language, but we decided to use the C language because it's a language we know, fast and powerful, often used in Linux and GNOME applications, and some library, like libvlc, exists only in this language. C has a very large collection of library, which could be needed in the project.

=== automake and autoconf ===

In software development, make is a utility for automatically building large applications. Files specifying instructions for make are called Makefiles. make is an expert system that tracks which files have changed since the last time the project was built and invokes the compiler on only those source code files and their dependencies. make is most commonly used in C/C++ projects, but in principle it can be used with almost any software project. Almost all Gnome applications use the same build system based on the GNU tools automake, autoconf, and libtool. GTK+ and Gnome provide a set of autoconf macros that make it easy to create a portable, standards-compliant build setup. In fact, the goal of these tools is to generate Makefiles to compil the project who use the system configuration from files Configure.in and several Makefile.am. Configure.in contains the list of the project dependencies, like libraries, headers file... and the command configure can determined if the project could be compiled on the machine. Makefile.am list the files that should be used by the Makefile to compil the project.

=== VLC library ===

FreetuxTV need to display a video in the window. Of course, it was impossible to start a new video player from the begining for the project. It will be really difficult, should take a lot of time and some habilities we haven't. So we decided to look for a library which will be able to read video streaming from the ISP's service. The most famous video player like VLC Media Player and MPlayer provide library which can do this. For our project, we decided to use the VLC library because VLC can read the biggest part of video formats, without install anything to read it (like codecs...). The developers toolkit for the VLC library could be installed on Linux system generally by installing the libvlc0-dev package. So you have to add the -lvlc option at the compilation step, to use the libvlc. You can watch a code source example of libVLC in annexes.

=== SQLite ===

FreetuxTV has to manage a list of channels with theirs groups, a list of logo, tv guide... By this fact, FreetuxTV need to store these datas into a database. The DBMS (Database Management Systems) we decided to use is SQLite because it's a small DBMS which don't need a server, because the database is stored in only one file. So it permit to create easily and fastly one FreetuxTV configuration per user on the machine. Of course, SQLite is limited by the performance for a great quantity of data, but its perfect for our project.

=== M3U Parser ===

M3U (Moving Picture Experts Group Audio Layer 3 Uniform Resource Locator, MP3 URL) is a computer file format that stores multimedia playlists. It was originally implemented in Winamp, although it is now supported by many applications. In our project, ISPs like Free, give an M3U playlist for the users to access on the channels list proposed. These file contains the name of the channels and their URL. Look at the annexe to see an example. So we had to make a library for read an M3U file and extract the the name and the URL. The goals of the parser is to add channels in the database and associate them automatically logos to them, thanks to the name.

=== cURL ===

cURL is a command line tool for transferring files with URL syntax. The strong point of cURL is the number of data transfer protocols it supports (listed further down). Distributed under the MIT License, cURL is free software. Libcurl is the corresponding library/API that users may incorporate into their programs: cURL acts as a stand-alone wrapper to the libcurl library. libcurl is used to provide URL transfer capabilities to numerous applications (open-source as well as proprietary). FreetuxTV needs cURL to download the playlist from internet, before to parse them with the parser M3U.

== 2.2 - Library documentation ==

A biggest part of the project consist to learn how the library work. We spend a long time on Internet readding the documention of them, because the documentation like the GTK/Glib's contains hundreds pages and it's really difficult to find exactly what you want.

 * GTK/Glib : http://library.gnome.org/devel/gtk/stable/
 * LibVLC : http://www.videolan.org/developers/vlc/doc/\\doxygen/html/group\_\_libvlc.html
 * SQLite : http://www.sqlite.org/docs.html
 * cURL : http://curl.haxx.se/libcurl/c/

We also have a look at the Gnome Application Development documentation (http://developer.gnome.org/doc/GGAD/ggad.html), which is really difficult to understand when you know nothing about this. Moreover, we often used Google search engine and other website to find help to resolve our developpement problems.

= 3 - Result =

== 3.1 - FreetuxTV possibilities ==

Here you can have look at the final result of the project:

http://www.eric-beuque.com/freetuxtv/freetuxtv.png

When you try to lunch FreetuxTV for the first time, it create automatically a new database in the user directory with some groups.
This database is composed of four tables :

 * channel_logo : The list of the channel logos that the software use and the name of the channel that it represents (ex: "france3.png", "France 3").
 * label_channellogo : Alternative channel names of a logo (ex: "France 3 Auvergne").
 * channels_group : List of channels group (ex: "FreeboxTV", "http://mafreebox.freebox.fr/freeboxtv/playlist.m3u").
 * channel : List of channels with their URI (ex: "France 3", "rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=202").

This architecture means that a logo is represented with an image, a name and eventually several alternative name. A group is composed of a list of channels. And finally, a channel might be associated with a logo, when adding a channel, by comparing the channel's name and the logos' names. The database could be changed in the future for example, by adding. At the begining, the program load a XML file which has a list of logos with their label, and add these informations in the database. Finally, it display the main window. Of the left, there is a tab with the list of channels sorted by group. If you click on the refresh button at the right of the group's name, the program download the playslist from Internet and put it in cache. After, channels of the group in database are deleted and the M3U parser insert the news. For each channels, the software looks for the good logo which correspond to the name of the channel. At the top of the tabs, you can see an entry text zone. If you write something in, FreetuxTV display in the channels list only the channels which the name contains the text entered. If you click, on the arrow at the left of the group's name, you can collaspe/expand the list of the channels in the group. These fonctionnality are working thanks to approximatively 2500 lines of source code. The logo's database is around 80 logos found on Internet which were adapted to the interface (size, black border...).

== 3.2 - Difficulties ==

Quantité de documentation, difficulté avec GObject, temps pour les fonctionnalités, difficulté des tests, présentation à la fac.
Différence de niveau.

== 3.3 - Future's project==

Vit du projet après la fac.
Enregistrement, programme TV...
Engouement du projet.
Deja des utilisateurs.
Projet libre, communauté.

= 4 - Discussion =
== 4.1 - Technical ==

librairie, c.

== 4.2 - Human ==

travaille en binone, communauté, communication

= Conclusion =

= Annexe =

== A.1 - Configure.in example ==

The Configure.in of the project:

{{{
# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.61)
AC_INIT(src/main.c)
AM_CONFIG_HEADER(config.h)

PACKAGE=freetuxtv
VERSION=0.1

AM_INIT_AUTOMAKE($PACKAGE,$VERSION)

if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(FREETUXTV_DIR,
           "${ac_default_prefix}/share/freetuxtv",
           [Location of FreetuxTV files])
else
  AC_DEFINE_UNQUOTED(FREETUXTV_DIR, 
           "${prefix}/share/freetuxtv",
           [Location of FreetuxTV files])
fi

# Checks for programs.
AC_PROG_CC
AC_STDC_HEADERS
AC_PROG_INSTALL

# Checks for libraries.
PKG_CHECK_MODULES(DEPS, gtk+-2.0 >= 2.2 glib-2.0 >= 2.2)

AC_CHECK_LIB(vlc, libvlc_new)
AC_CHECK_LIB(sqlite3, sqlite3_open)
AC_CHECK_LIB(curl, curl_easy_init)
AC_CHECK_LIB(gthread-2.0, g_thread_init)

AC_SUBST(DEPS_CFLAGS)
AC_SUBST(DEPS_LIBS)

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(string.h stdlib.h)

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

AC_CONFIG_FILES([Makefile
                 src/Makefile
                 data/Makefile
                 data/menu/Makefile
                 data/images/Makefile
                 data/images/channels/Makefile])

AC_OUTPUT
}}}

== A.2 -  libVLC example ==

Example for libVLC for version 0.8.6c in C language :

{{{
#include <stdio.h>
#include <stdlib.h>
#include <vlc/libvlc.h>

static void
quit_on_exception (libvlc_exception_t *excp){
   if(libvlc_exception_raised (excp)){
      fprintf(stderr, "error: %s\n",
              libvlc_exception_get_message(excp));
      exit(-1);
   }
}

int main(int argc, char **argv) {
   libvlc_exception_t excp;
   libvlc_instance_t *inst;
   int item;
   char *filename = "/tmp/WorldOfPadman_Intro.avi";

   libvlc_exception_init (&excp);
   inst = libvlc_new (argc, argv, &excp);
   quit_on_exception (&excp);
   item = libvlc_playlist_add (inst, filename,
                               NULL, &excp); 
   quit_on_exception (&excp);
   libvlc_playlist_play (inst, item, 0, NULL, &excp); 
   quit_on_exception (&excp);
   usleep (10000000);
   libvlc_destroy (inst);
   return 0;
}
}}}

== A.3 -  M3U file example ==

Part of the M3U file containing the channels proposed on FreeboxTV (URL is http://mafreebox.freebox.fr/freeboxtv/playlist.m3u):

{{{
#EXTM3U
#EXTINF:0,2 - France 2
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=201
#EXTINF:0,3 - France 3 national
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=202
#EXTINF:0,5 - France 5
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=203
#EXTINF:0,7 - Arte
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=204
#EXTINF:0,8 - Direct 8
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=372
#EXTINF:0,10 - TMC
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=497
#EXTINF:0,11 - NT1
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=374
#EXTINF:0,12 - NRJ 12 5.1
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=381
#EXTINF:0,12 - NRJ 12 NRJ 12
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=666
#EXTINF:0,12 - NRJ 12 Stéréo
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=382
#EXTINF:0,13 - La Chaîne Parlementaire
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=226
#EXTINF:0,14 - France 4
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=376
#EXTINF:0,15 - BFM TV
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=400
#EXTINF:0,16 - i> TELE
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=679
#EXTINF:0,17 - Virgin 17
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=678
#EXTINF:0,18 - Gulli
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=677
#EXTINF:0,19 - Paris Première
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=213
#EXTINF:0,20 - TEVA
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=404
#EXTINF:0,21 - RTL9
rtsp://mafreebox.freebox.fr/freeboxtv/stream?id=210
}}}